{
    "process" : {
        "name" : "Submit to CWC and get LFA",
        "description" : "Submit to CWC and get LFA..."
    },
    "document" : [
        {
            "name" : "Certificate_1",
            "description" : "certificate 1 as PDF"
        }
    ],
    "subprocess" : [
        {
            "name" : "Submit the case to CWC for getting the legally free for adoption (LFA) certificate"
        },
        {
            "name" : "CWC will issue the LFA to the CCI/SAA"
        },
        {
            "name" : "Submit letter to DCPU to link the child to the relevant SAA"
        }
    ],
    "category" : "ABANDONED",
    "order_no" : 3
}

{
    "process" : {
    "name" : "Get child uploaded to Carings",
    "description" : "Get child uploaded to Carings.."
    },
    "document" : [
    {
    "name" : "Certificate_1",
    "description" : "certificate 1 as PDF"
    },
    {
    "name" : "Certificate_2"
    }
    ],
    "subprocess" : [
    {
    "name" : "Submit child’s file to the SAA"
    },
    {
    "name" : "Work with SAA and CCI to complete medical tests, MER,CSR"
    },
    {
    "name" : "Follow-up with SAA to upload child into Carings"
    }
    ],
    "category" : "ABANDONED",
    "order_no" : 4
    }


    {
        "process" : 
            {
                "name" : "Submit to DCPU and get NOC",
                "description" : "Submit to DCPU and get NOC...."
            },
        "document" : [
            {
                "name" : "Certificate_1",
                "description" : "certificate 1 as PDF"
            }
        ],
        "subprocess" : [
            {
                "name" : "Submit child’s report for DCPU for NOC"
            },
            {
                "name" : "Receive DCPU NOC"
            },
            {
                "name" : "Final Report from CCI"
            }
        ],
        "category" : "ORPHANED",
        "order_no" : 2
    }


    {
        "process" : {
        "name" : "Verify/obtain the surrender deed",
        "description" : "Verify/obtain the surrender deed.."
        },
        "document" : [
        {
        "name" : "Certificate_1",
        "description" : "certificate 1 as PDF"
        }
        ],
        "subprocess" : [
        {
        "name" : "Is surrender deed is already done, make sure the original deed is in the child’s file"
        },
        {
        "name" : "If surrender deed needs to be done, CCI should bring the parents in front of CWC and get the surrender deed signed"
        },
        {
        "name" : "If the CWC declare surrender deed incomplete due to want of documents, follow abandonment process"
        }
        ],
        "category" : "SURRENDERED",
        "order_no" : 1
        }

    

        {
            "process" : {
            "name" : "Get child uploaded to Carings",
            "description" : "Get child uploaded to Carings.."
            },
            "document" : [
            {
            "name" : "Certificate_1",
            "description" : "certificate 1 as PDF"
            },
            {
            "name" : "Certificate_2"
            }
            ],
            "subprocess" : [
            {
            "name" : "Submit child’s file to the SAA (if not already done in step 3)"
            },
            {
            "name" : "Work with SAA and CCI to complete medical tests, MER,CSR"
            },
            {
            "name" : "Follow-up with SAA to upload child into Carings"
            }
            ],
            "category" : "SURRENDERED",
            "order_no" : 3
            }

    
    {
        "process" : {
        "name" : "Work on and complete documentation",
        "description" : "Work on and complete documentation.."
        },
        "document" : [
        {
        "name" : "Certificate_1",
        "description" : "certificate 1 as PDF"
        },
        {
        "name" : "Certificate_2"
        }
        ],
        "subprocess" : [
        {
        "name" : "Social Investigation Report"
        },
        {
        "name" : "Newspaper Publication"
        },
        {
        "name" : "TV Telecasting"
        },
        {
        "name" : "File Report to trace guardians with police station"
        },
        {
        "name" : "Final Police Report"
        },
        {
        "name" : "Medical Report for age verification (if needed)"
        }
        ],
        "category" : "CHILD ADMITTED IN CCI BY FAMILY",
        "order_no" : 1
        }

    {
        "process" : {
        "name" : "Submit to DCPU and get NOC",
        "description" : "Submit to DCPU and get NOC..."
        },
        "document" : [
        {
        "name" : "Certificate_1",
        "description" : "certificate 1 as PDF"
        },
        {
        "name" : "Certificate_2"
        }
        ],
        "subprocess" : [
        {
        "name" : "Submit child’s report for DCPU for NOC"
        },
        {
        "name" : "Receive DCPU NOC"
        },
        {
        "name" : "Receive CCI Final Report"
        }
        ],
        "category" : "CHILD ADMITTED IN CCI BY FAMILY",
        "order_no" : 2
        }

        {
            "process" : {
            "name" : "Submit to DCPU and get NOC",
            "description" : "Get child uploaded to Carings.."
            },
            "document" : [
            {
            "name" : "Certificate_1",
            "description" : "certificate 1 as PDF"
            },
            {
            "name" : "Certificate_2"
            }
            ],
            "subprocess" : [
            {
            "name" : "Submit child’s report for DCPU for NOC"
            },
            {
            "name" : "Receive DCPU NOC"
            },
            {
            "name" : "Receive CCI Final Report"
            }
            ],
            "category" : "CHILD ADMITTED IN CCI BY FAMILY",
            "order_no" : 2
            }



{
    "name" : "Work on and complete documentation",
    "description" : "Work on and complete documentation....",
    "category" : "ABANDONED",
    "order_no" : 1,
    "subprocess" : [
        {
            "name" : "Newspaper Publication",
            "documents" : ["doc-1","doc-2"]
        },
        {
            "name" : "TV Telecasting",
            "documents" : ["doc-1","doc-2"]
        },
        {
            "name" : "File Missing Compliant, if not already done",
            "documents" : []
        },
        {
            "name" : "Final Police Report",
            "documents" : []
        },
        {
            "name" : "Medical Report for age verification (if needed)",
            "documents" : []
        },
        {
            "name" : "Social Investigation Report (if needed)",
            "documents" : []
        }
    ]
}

{
    "name" : "Submit to DCPU and get NOC",
    "description" : "Submit to DCPU and get NOC....",
    "category" : "ABANDONED",
    "order_no" : 2,
    "subprocess" : [
        {
            "name" : "Submit child’s report for DCPU for NOC",
            "documents" : []
        },
        {
            "name" : "Receive DCPU NOC",
            "documents" : []
        },
        {
            "name" : "Final Report from CCI",
            "documents" : []
        }
    ]
}

{
    "name" : "Submit to CWC and get LFA",
    "description" : "Submit to CWC and get LFA....",
    "category" : "ABANDONED",
    "order_no" : 3,
    "subprocess" : [
        {
            "name" : "Submit the case to CWC for getting the legally free for adoption (LFA) certificate",
            "documents" : ["child report"]
        },
        {
            "name" : "CWC will issue the LFA to the CCI/SAA",
            "documents" : []
        },
        {
            "name" : "Submit letter to DCPU to link the child to the relevant SAA",
            "documents" : []
        }
    ]
}

{
    "name" : "Get child uploaded to Carings",
    "description" : "Get child uploaded to Carings....",
    "category" : "ABANDONED",
    "order_no" : 4,
    "subprocess" : [
        {
            "name" : "Submit child’s file to the SAA",
            "documents" : ["doc - 5"]
        },
        {
            "name" : "Work with SAA and CCI to complete medical tests, MER, CSR",
            "documents" : []
        },
        {
            "name" : "Follow-up with SAA to upload child into Carings",
            "documents" : []
        }
    ]
}





import React, { useState,useEffect } from 'react';
import '../CSSstyles/StatusUpdate.css';
import NavBar from '../Navs/grassrootnav';
import { makeStyles } from '@material-ui/core/styles';
import { useParams } from 'react-router-dom';
import {useNavigate} from "react-router-dom";
import {
  Grid,
  Paper,
  FormControlLabel,
  Checkbox,
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  Button,
  TextField,
} from '@material-ui/core';
import backgroundImage from './reg.jpg';
import Cookies from 'universal-cookie';

const useStyles = makeStyles((theme) => ({
  root: {
    flexGrow: 1,
    marginTop: theme.spacing(50),
    marginLeft: theme.spacing(30),
    // Adjust margin to match NavBar height
  },
  content: {
    position: 'relative',
    minHeight: '100vh',
    paddingTop: theme.spacing(2),
    overflow: 'hidden',
    marginBottom: theme.spacing(10),
  },
  background: {
    position: 'fixed',
    top: 0,
    left: 0,
    height: '100%',
    width: '100%',
    zIndex: -1,
    filter: 'blur(3px)',
    background: `url(${backgroundImage})`,
    backgroundSize: 'cover',
    backgroundAttachment: 'fixed',
  },
  paper: {
    textAlign: 'left',
    color: theme.palette.text.secondary,
    alignItems: 'center',
    justifyContent: 'center',
    paddingTop: theme.spacing(2),
    height: '40%',
    marginBottom: theme.spacing(2),
    width: '100%',
    overflow: 'auto', // Add overflow auto to enable scrolling when content overflows
    display: 'flex', // Add display flex
    flexDirection: 'column', // Add flex-direction column
    justifyContent: 'center',
    color: 'black',
  },
  firstRowPaper: {
    backgroundColor: 'lavender',
    fontWeight: 'bold',
    paddingTop: theme.spacing(2),
    paddingBottom: theme.spacing(2),
    marginBottom: theme.spacing(2),
  },
  documentTypes: {
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
    textAlign: 'center',
  },
  checkboxLabel: {
    display: 'flex',
    alignItems: 'center',
  },
  checkboxText: {
    marginLeft: theme.spacing(1),
  },
}));

function GDetails() {
  const classes = useStyles();
  const { id } = useParams();
  const navigate = useNavigate();
  const cookies = new Cookies()
  const ChildId = decodeURIComponent(id);



const APICall = (configObject)=>{
    return new Promise((resolve,reject)=>{
      fetch(configObject.url,{
        method:configObject.method?configObject.method:'GET',
        body:configObject.body?JSON.stringify(configObject.body):null,
        headers:configObject.headers?configObject.headers:{},
      }).then((response)=>resolve(response.json()))
    })
  }

  useEffect(() => {
    const fetchData = async () => {
      try {
        const token = cookies.get("accessToken"); // to get token already present.If there is token ,login page should not be rendered
        const configObject = {
          url:`http://localhost:8081/process/progress?childId=${childId}`,
          method:'GET',
          headers:{'Content-Type':'application/json','Authorization': token},
        }
        const responseData = await APICall(configObject)
        const data = responseData['data']
        console.log(data)
        setFinished(data.finished)
        setWorking(data.working)
        setNotStarted(data.notStarted)
      } catch (error) {
        console.error('Error:', error);
      }
    };

    fetchData();
  }, [childId]); 



  useEffect(()=>{
      const fetchData = async () => {
        try {
          console.log(`http://localhost:8081/process/progress`)
          const token = cookies.get("accessToken"); // to get token already present.If there is token ,login page should not be rendered
          const configObject = {
            url:`http://localhost:8081/process/progress`,
            method:'GET',
            headers:{'Content-Type':'application/json','Authorization': token},
          }
          const responseData = await APICall(configObject)
          const data = responseData['data']
          console.log(responseData)
          console.log(data)
          // setChild(data)
        } catch (error) {
          console.error('Error:', error);
        }
      };
  
      fetchData();
    },[child])